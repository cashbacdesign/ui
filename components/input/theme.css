@import '@teamleader/ui-colors';
@import '@teamleader/ui-typography';

/**
 * Variables
 */
:root {
  --input-height-large: calc(4.6 * var(--unit));
  --input-height-medium: calc(3.4 * var(--unit));
  --input-height-small: calc(2.8 * var(--unit));
  --input-width: calc(30 * var(--unit));
  --input-horizontal-padding: calc(.5 * var(--unit));
  --input-horizontal-padding-icon-large: calc(3.5 * var(--unit));
  --input-horizontal-padding-icon: calc(2.2 * var(--unit));
  --input-text-size: calc(1.4 * var(--unit));
  --input-text-size-large: calc(1.6 * var(--unit));
  --input-border-radius: calc(.4 * var(--unit));
  --input-error-border: var(--color-ruby-dark);

  --icon-horizontal: calc(.5 * var(--unit));

  --spinner-width: calc(2.9 * var(--unit));
  --spinner-width-large: calc(3.6 * var(--unit));
  --spinner-background: var(--color-neutral-light);
  --spinner-border: var(--color-neutral-dark);
  --spinner-color: var(--color-neutral-darkest);
}

/**
 * Components
 */
.wrapper {
  width: 100%;
  max-width: var(--input-width);

  &:not(.is-inverse) {
    .icon {
      color: var(--color-neutral-darkest)
    }

    .input {
      background: var(--color-white);
      border: 1px solid var(--color-neutral-dark);
      color: var(--color-teal-darkest);

      &::placeholder {
        color: var(--color-neutral-darkest);
      }
    }

    &:not(.is-disabled):not(.is-read-only) {
      &:hover {
        .input,
        .spinner-up,
        .spinner-down {
          border-color: var(--color-neutral-darkest);
        }
      }

      .input {
        &:focus {
          border-color: var(--color-neutral-darkest);
          box-shadow: 0 0 0 1px var(--color-neutral-darkest);

          + .spinner {
            .spinner-up,
            .spinner-down {
              border-color: var(--color-neutral-darkest);
            }
          }
        }

        &:active {
          border-color: var(--color-neutral-darkest);
          box-shadow: inset 0 1px 3px 0 rgba(130, 130, 140, .48);
        }
      }
    }

    &.is-disabled {
      .input {
        background-color: var(--color-neutral);
        border-color: var(--color-neutral);
        color: var(--color-neutral-darkest);
      }
    }

    &.is-read-only {
      .input {
        background-color: var(--color-neutral);
        border-color: var(--color-neutral);
      }
    }
  }

  &.is-inverse {
    .icon {
      color: var(--color-teal-light)
    }

    .input {
      background: var(--color-teal);
      border: 1px solid var(--color-teal);
      color: var(--color-neutral-lightest);

      &::placeholder {
        color: var(--color-teal-light);
      }
    }

    &:not(.is-disabled):not(.is-read-only) {
      &:hover {
        .input,
        .spinner-up,
        .spinner-down {
          border-color: var(--color-teal-light);
        }
      }

      .input {
        &:focus {
          border-color: var(--color-teal-light);
          box-shadow: 0 0 0 1px var(--color-teal-light);

          + .spinner {
            .spinner-up,
            .spinner-down {
              border-color: var(--color-teal-light);
            }
          }
        }

        &:active {
          border-color: var(--color-neutral-darkest);
          box-shadow: inset 0 1px 3px 0 color(var(--color-teal-darkest) a(.48));
        }
      }
    }

    &.is-disabled {
      .input {
        background-color: var(--color-teal-dark);
        border-color: var(--color-teal-dark);
        color: var(--color-teal);

        &::placeholder {
          color: var(--color-teal);
        }
      }
    }

    &.is-read-only {
      .input {
        background-color: var(--color-teal-dark);
        border-color: var(--color-teal-dark);
      }
    }
  }
}

.input-wrapper {
  position: relative;
}

.input,
.input::placeholder {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased;
  text-size-adjust: 100%;
}

.input {
  transition: .3s ease-in-out border, .3s ease-in-out box-shadow;

  position: relative;
  box-sizing: border-box;

  height: var(--input-height-medium);
  width: 100%;
  padding: 0 var(--input-horizontal-padding);

  border-radius: var(--input-border-radius);
  box-shadow: 0;

  font-size: var(--input-text-size);
  font-family: var(--font-family-regular);

  &[type="number"]::-webkit-outer-spin-button,
  &[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  &:focus {
    outline: none;
  }

  &.is-bold {
    font-family: var(--font-family-medium);
  }
}


.validation-icon,
.icon,
.counter {
  position: absolute;
  z-index: 1;
  top: 50%;
  transform: translateY(-50%);
}

.validation-icon,
.icon {
  left: var(--icon-horizontal);
}

.counter {
  right: var(--icon-horizontal);
}

.spinner {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  display: flex;
  flex-direction: column;
  height: 100%;

  width: var(--spinner-width);
}

.spinner-up,
.spinner-down {
  align-items: center;
  display: flex;
  flex: 1;
  justify-content: center;
  margin: 0;
  outline: 0;
  background-color: var(--spinner-background);

  border-radius: 0 var(--input-border-radius) 0 0;
  border: solid 1px var(--spinner-border);

  color: var(--spinner-color);
  transition: .3s ease-in-out border;
}

.spinner-down {
  border-radius: 0 0 var(--input-border-radius) 0;
  border-top: 0;
}

.error {
  color: var(--color-ruby-dark);
}

/**
 * Modifiers
 */
.is-disabled,
.is-read-only {
  .spinner {
    opacity: .48;
    pointer-events: none;
  }
}

.is-disabled {
  .input {
    pointer-events: none;
    user-select: none;
  }
}

.is-large {
  .input {
    height: var(--input-height-large);
    font-size: var(--input-text-size-large);
  }

  .spinner {
    width: var(--spinner-width-large);
  }

  .spinner-up,
  .spinner-down {
    svg {
      height: 14px;
    }
  }

  &.has-icon-left {
    .input {
      padding-left: var(--input-horizontal-padding-icon-large);
    }
  }

  &.has-validation-feedback,
  &.has-icon-right {
    .input {
      padding-right: var(--input-horizontal-padding-icon-large);
    }
  }
}

.is-small {
  .input {
    height: var(--input-height-small);
  }

  .spinner-up,
  .spinner-down {
    svg {
      height: 9px;
    }
  }
}

.has-icon-left {
  .input {
    padding-left: var(--input-horizontal-padding-icon);
  }
}

.has-icon-right,
.has-counter {
  .input {
    padding-right: var(--input-horizontal-padding-icon);
  }

  .icon {
    left: auto;
    right: var(--icon-horizontal);
  }
}

.has-validation-feedback {
  .validation-icon {
    left: auto;
    right: var(--icon-horizontal);
  }

  .counter,
  &.has-icon-right .icon {
    display: none;
  }

  .input {
    padding-right: var(--input-horizontal-padding-icon);
  }

  &.is-numeric {
    .input {
      padding-right: calc(var(--input-horizontal-padding-icon) + var(--spinner-width));
    }

    .validation-icon {
      right: calc(var(--icon-horizontal) + var(--spinner-width));
    }

    &.is-large {
      .input {
        padding-right: calc(var(--input-horizontal-padding-icon) + var(--spinner-width-large));
      }

      .validation-icon {
        right: calc(var(--icon-horizontal) + var(--spinner-width-large));
      }
    }
  }
}

.has-error {
  &:not(.is-inverse) {
    .input {
      border-color: var(--input-error-border);
      box-shadow: 0 0 0 1px var(--input-error-border);
    }

    .validation-icon {
      color: var(--color-ruby-dark);
    }

    .validation-text {
      color: var(--color-ruby-dark);
    }
  }

  &.is-inverse {
    .input {
      border-color: var(--color-ruby-light);
      box-shadow: 0 0 0 1px var(--color-ruby-light);
    }

    .validation-icon {
      color: var(--color-ruby-light);
    }

    .validation-text {
      color: var(--color-ruby-light);
    }
  }
}
